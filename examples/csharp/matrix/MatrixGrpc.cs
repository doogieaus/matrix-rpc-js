// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: matrix.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Matrix {
  public static partial class Matrix
  {
    static readonly string __ServiceName = "matrix.Matrix";

    static readonly grpc::Marshaller<global::Matrix.StartSessionRequest> __Marshaller_matrix_StartSessionRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Matrix.StartSessionRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Matrix.SessionEvent> __Marshaller_matrix_SessionEvent = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Matrix.SessionEvent.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Matrix.GetAccessTokenRequest> __Marshaller_matrix_GetAccessTokenRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Matrix.GetAccessTokenRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Matrix.GetAccessTokenResponse> __Marshaller_matrix_GetAccessTokenResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Matrix.GetAccessTokenResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Matrix.JoinRoomRequest> __Marshaller_matrix_JoinRoomRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Matrix.JoinRoomRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Matrix.JoinRoomResponse> __Marshaller_matrix_JoinRoomResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Matrix.JoinRoomResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Matrix.LeaveRequest> __Marshaller_matrix_LeaveRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Matrix.LeaveRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Matrix.LeaveResponse> __Marshaller_matrix_LeaveResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Matrix.LeaveResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Matrix.SendTextMessageRequest> __Marshaller_matrix_SendTextMessageRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Matrix.SendTextMessageRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Matrix.SendTextMessageResponse> __Marshaller_matrix_SendTextMessageResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Matrix.SendTextMessageResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Matrix.SendReadReceiptRequest> __Marshaller_matrix_SendReadReceiptRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Matrix.SendReadReceiptRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Matrix.SendReadReceiptResponse> __Marshaller_matrix_SendReadReceiptResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Matrix.SendReadReceiptResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Matrix.StartSessionRequest, global::Matrix.SessionEvent> __Method_StartSession = new grpc::Method<global::Matrix.StartSessionRequest, global::Matrix.SessionEvent>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "StartSession",
        __Marshaller_matrix_StartSessionRequest,
        __Marshaller_matrix_SessionEvent);

    static readonly grpc::Method<global::Matrix.GetAccessTokenRequest, global::Matrix.GetAccessTokenResponse> __Method_GetAccessToken = new grpc::Method<global::Matrix.GetAccessTokenRequest, global::Matrix.GetAccessTokenResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAccessToken",
        __Marshaller_matrix_GetAccessTokenRequest,
        __Marshaller_matrix_GetAccessTokenResponse);

    static readonly grpc::Method<global::Matrix.JoinRoomRequest, global::Matrix.JoinRoomResponse> __Method_JoinRoom = new grpc::Method<global::Matrix.JoinRoomRequest, global::Matrix.JoinRoomResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "JoinRoom",
        __Marshaller_matrix_JoinRoomRequest,
        __Marshaller_matrix_JoinRoomResponse);

    static readonly grpc::Method<global::Matrix.LeaveRequest, global::Matrix.LeaveResponse> __Method_Leave = new grpc::Method<global::Matrix.LeaveRequest, global::Matrix.LeaveResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Leave",
        __Marshaller_matrix_LeaveRequest,
        __Marshaller_matrix_LeaveResponse);

    static readonly grpc::Method<global::Matrix.SendTextMessageRequest, global::Matrix.SendTextMessageResponse> __Method_SendTextMessage = new grpc::Method<global::Matrix.SendTextMessageRequest, global::Matrix.SendTextMessageResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendTextMessage",
        __Marshaller_matrix_SendTextMessageRequest,
        __Marshaller_matrix_SendTextMessageResponse);

    static readonly grpc::Method<global::Matrix.SendReadReceiptRequest, global::Matrix.SendReadReceiptResponse> __Method_SendReadReceipt = new grpc::Method<global::Matrix.SendReadReceiptRequest, global::Matrix.SendReadReceiptResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendReadReceipt",
        __Marshaller_matrix_SendReadReceiptRequest,
        __Marshaller_matrix_SendReadReceiptResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Matrix.MatrixReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Matrix</summary>
    public abstract partial class MatrixBase
    {
      public virtual global::System.Threading.Tasks.Task StartSession(global::Matrix.StartSessionRequest request, grpc::IServerStreamWriter<global::Matrix.SessionEvent> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Matrix.GetAccessTokenResponse> GetAccessToken(global::Matrix.GetAccessTokenRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Matrix.JoinRoomResponse> JoinRoom(global::Matrix.JoinRoomRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Matrix.LeaveResponse> Leave(global::Matrix.LeaveRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Matrix.SendTextMessageResponse> SendTextMessage(global::Matrix.SendTextMessageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Matrix.SendReadReceiptResponse> SendReadReceipt(global::Matrix.SendReadReceiptRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Matrix</summary>
    public partial class MatrixClient : grpc::ClientBase<MatrixClient>
    {
      /// <summary>Creates a new client for Matrix</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public MatrixClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Matrix that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public MatrixClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected MatrixClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected MatrixClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual grpc::AsyncServerStreamingCall<global::Matrix.SessionEvent> StartSession(global::Matrix.StartSessionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartSession(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Matrix.SessionEvent> StartSession(global::Matrix.StartSessionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_StartSession, null, options, request);
      }
      public virtual global::Matrix.GetAccessTokenResponse GetAccessToken(global::Matrix.GetAccessTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccessToken(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Matrix.GetAccessTokenResponse GetAccessToken(global::Matrix.GetAccessTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAccessToken, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Matrix.GetAccessTokenResponse> GetAccessTokenAsync(global::Matrix.GetAccessTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccessTokenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Matrix.GetAccessTokenResponse> GetAccessTokenAsync(global::Matrix.GetAccessTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAccessToken, null, options, request);
      }
      public virtual global::Matrix.JoinRoomResponse JoinRoom(global::Matrix.JoinRoomRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return JoinRoom(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Matrix.JoinRoomResponse JoinRoom(global::Matrix.JoinRoomRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_JoinRoom, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Matrix.JoinRoomResponse> JoinRoomAsync(global::Matrix.JoinRoomRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return JoinRoomAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Matrix.JoinRoomResponse> JoinRoomAsync(global::Matrix.JoinRoomRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_JoinRoom, null, options, request);
      }
      public virtual global::Matrix.LeaveResponse Leave(global::Matrix.LeaveRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Leave(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Matrix.LeaveResponse Leave(global::Matrix.LeaveRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Leave, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Matrix.LeaveResponse> LeaveAsync(global::Matrix.LeaveRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LeaveAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Matrix.LeaveResponse> LeaveAsync(global::Matrix.LeaveRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Leave, null, options, request);
      }
      public virtual global::Matrix.SendTextMessageResponse SendTextMessage(global::Matrix.SendTextMessageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendTextMessage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Matrix.SendTextMessageResponse SendTextMessage(global::Matrix.SendTextMessageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendTextMessage, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Matrix.SendTextMessageResponse> SendTextMessageAsync(global::Matrix.SendTextMessageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendTextMessageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Matrix.SendTextMessageResponse> SendTextMessageAsync(global::Matrix.SendTextMessageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendTextMessage, null, options, request);
      }
      public virtual global::Matrix.SendReadReceiptResponse SendReadReceipt(global::Matrix.SendReadReceiptRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendReadReceipt(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Matrix.SendReadReceiptResponse SendReadReceipt(global::Matrix.SendReadReceiptRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendReadReceipt, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Matrix.SendReadReceiptResponse> SendReadReceiptAsync(global::Matrix.SendReadReceiptRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendReadReceiptAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Matrix.SendReadReceiptResponse> SendReadReceiptAsync(global::Matrix.SendReadReceiptRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendReadReceipt, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override MatrixClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MatrixClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(MatrixBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_StartSession, serviceImpl.StartSession)
          .AddMethod(__Method_GetAccessToken, serviceImpl.GetAccessToken)
          .AddMethod(__Method_JoinRoom, serviceImpl.JoinRoom)
          .AddMethod(__Method_Leave, serviceImpl.Leave)
          .AddMethod(__Method_SendTextMessage, serviceImpl.SendTextMessage)
          .AddMethod(__Method_SendReadReceipt, serviceImpl.SendReadReceipt).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MatrixBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_StartSession, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Matrix.StartSessionRequest, global::Matrix.SessionEvent>(serviceImpl.StartSession));
      serviceBinder.AddMethod(__Method_GetAccessToken, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Matrix.GetAccessTokenRequest, global::Matrix.GetAccessTokenResponse>(serviceImpl.GetAccessToken));
      serviceBinder.AddMethod(__Method_JoinRoom, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Matrix.JoinRoomRequest, global::Matrix.JoinRoomResponse>(serviceImpl.JoinRoom));
      serviceBinder.AddMethod(__Method_Leave, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Matrix.LeaveRequest, global::Matrix.LeaveResponse>(serviceImpl.Leave));
      serviceBinder.AddMethod(__Method_SendTextMessage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Matrix.SendTextMessageRequest, global::Matrix.SendTextMessageResponse>(serviceImpl.SendTextMessage));
      serviceBinder.AddMethod(__Method_SendReadReceipt, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Matrix.SendReadReceiptRequest, global::Matrix.SendReadReceiptResponse>(serviceImpl.SendReadReceipt));
    }

  }
}
#endregion
